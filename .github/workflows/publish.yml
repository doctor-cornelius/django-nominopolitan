name: Release and Publish

on:
  push:
    branches: [ main ]

jobs:
  release:
    if: contains(github.event.head_commit.message, 'release(')
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install Dependencies
        run: |
          pip install poetry commitizen
          poetry lock
          poetry install
      - name: Get Version
        id: get_version
        run: echo "version=$(poetry version -s)" >> "$GITHUB_OUTPUT"
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ steps.get_version.outputs.version }} \
            --title "Release ${{ steps.get_version.outputs.version }}" \
            --notes "${{ github.event.head_commit.message }}"

  publish:
    needs: release
    if: contains(github.event.head_commit.message, 'release(')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install Poetry
        run: pip install poetry
      - name: Build and publish
        env:
          PYPI_TOKEN_CI: ${{ secrets.PYPI_TOKEN_CI }}
        run: |
          poetry config pypi-token.pypi $PYPI_TOKEN_CI
          poetry build
          poetry publish

